services:
  frontend:
    build: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    build: ./backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_NAME=irrigation
      - DB_USER=irrigation_user
      - DB_PASSWORD=development_password
      - REDIS_HOST=redis
      - MQTT_HOST=mosquitto
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      mosquitto:
        condition: service_started

  simulator:
    build:
      context: ./backend
      dockerfile: Dockerfile.simulator
    environment:
      - NODE_ENV=development
      - MQTT_HOST=mosquitto
    depends_on:
      - mosquitto

  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=irrigation
      - POSTGRES_USER=irrigation_user
      - POSTGRES_PASSWORD=development_password
    volumes:
      - ./backend/src/db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U irrigation_user -d irrigation"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_volume:/data

volumes:
  postgres_volume:
  redis_volume:
  mosquitto_data:
  mosquitto_log:
